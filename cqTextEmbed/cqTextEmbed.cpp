// cqTextEmbed.cpp : Defines the entry point for the console application.
//

#include <Windows.h>
#include <stdlib.h>
#include <stdio.h>
#include <string.h>

TCHAR *header =
L"// THIS FILE IS AUTOMATICALLY GENERATED FROM TEXT FILES IN /BIN. DO NOT MODIFY\r\
package data;\r\
\r\
/**\r\
 * ...\r\
 * @author randomnine\r\
 */\r\
\r\
class StatsFileEmbed \r\
{\r\
	public static function loadEmbeddedFiles() \r\
	{\r\
		var embedText:String;\r\
		var embedFile:StatsFile;\r\
\r\
";

TCHAR *fileEmbed1 =
L"		embedText = \"";

TCHAR *fileEmbed2 = L"\";\r\
		embedFile = StatsFile.loadFromString( \"";

TCHAR *fileEmbed3 = L"\", embedText );\r\
\r\
";

TCHAR *footer =
L"	}\r\
}\r\
";

int main(int argc, char* argv[])
{
	TCHAR *output = new TCHAR[100000]; // 100KB max.

	// Write header.
	wcscpy( output, header );

	// Read all from "bin/*.txt".
	HANDLE fh;
	WIN32_FIND_DATA *fd = new WIN32_FIND_DATA();

	if ( argc > 1 ) {
		char path[128] = "";
		TCHAR wpath[128] = L"";

		strcpy( path, argv[1] );
		strcat( path, "/*.txt");

		for ( int i=0; i<=strlen(path); ++i ) {
			wpath[i] = path[i];
		}

		fh = FindFirstFile( wpath, fd );
	} else {
		fh = FindFirstFile( L"bin/*.txt", fd );
	}

	if ( fh != INVALID_HANDLE_VALUE )
	{
		do
		{
			TCHAR filepath[256] = L"bin/";

			if ( argc > 1 ) {
				for ( int i=0; i<=strlen(argv[1]); ++i ) {
					filepath[i] = argv[1][i];
				}
				wcscat( filepath, L"/" );
			}

			wcscat( filepath, fd->cFileName );

			FILE *f_in = _wfopen( filepath, L"r, ccs=UTF-8" );

			if ( f_in != NULL )
			{
				wcscat( output, fileEmbed1 );

				TCHAR buf[512];
				while ( fgetws( buf, 512, f_in ) )
				{
					TCHAR fixbuf[1024];
					TCHAR *b = buf, *f = fixbuf;
					while ( *b != '\0' )
					{
						if ( *b == '"' )
						{
							*f++ = '\\';
						}

						*f++ = *b++;
					}
					*f = '\0';

					wcscat( output, fixbuf );
				}

				fclose( f_in );

				wcscat( output, fileEmbed2 );
				wcscat( output, fd->cFileName );
				wcscat( output, fileEmbed3 );
			}
		} while ( FindNextFile( fh, fd ) );
	}

	// Add footer.
	wcscat( output, footer );

	// Write to "src/data/StatsFileEmbed.hx".
	FILE *f_out = _wfopen( L"src/data/StatsFileEmbed.hx", L"w, ccs=UTF-8" );
	fputws( output, f_out );
	fclose( f_out );

	delete fd;
	delete [] output;

	return 0;
}
